// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field Array str;
    field int strlength;
    field int Maxlength;
    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
         if (maxLength = 0){
            let maxLength = 1;
        }
        let str = Array.new(maxLength);
        let Maxlength = maxLength;
        let strlength = 0;
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do str.dispose();
        return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return strlength;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return str[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let str[j] = c;
        return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        if (strlength < Maxlength){
            let str[strlength] = c;
            let strlength = strlength + 1;
        }
        return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        if (strlength > 0){
            let strlength = strlength - 1;
        }
        return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        var int val , i , d , nondigit;
        var boolean negative;
        let val = 0;
        let i = 0;
        let nondigit = 1;
        let negative = false;
        if (str[0] = 45){
            let negative = true;
            let i = 1;
        }
        while ((~(i = strlength)) & (nondigit = 1)){
            let d = charAt(i) - 48;
            if ((d > -1) & (d < 10)){
                let val = (val* 10) + d;
            }
            else{
                let nondigit = 0;
            }
            let i = i + 1;
        }
        if (negative = (-1)){
            let val = -val;
        }
        return val;
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        var int lastDigit ,n;
        var int c;
        if (val < 0){
            do appendChar(45);
            let val = -val;
        }
        let n = val/10;
        let lastDigit = val - (n*10) ; //taking modulus
        let c = lastDigit + 48;
        if (val < 10){
            do appendChar(c);
        }
        else{
            do setInt(n);
            do appendChar(c);
        }

        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
