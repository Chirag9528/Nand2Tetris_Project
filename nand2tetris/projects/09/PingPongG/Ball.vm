function Ball.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 1
pop this 3
push constant 1
pop this 4
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.moveball 4
push argument 0
pop pointer 0
push pointer 0
call Ball.collisionline 1
pop local 1
push pointer 0
call Ball.collisionvert 1
pop local 2
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
call Ball.collisionrect 5
pop local 3
push local 1
push constant 1
eq
push local 1
push constant 2
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
neg
pop this 4
label IF_FALSE0
push local 3
push constant 1
eq
push local 3
push constant 2
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
neg
pop this 3
push local 3
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop local 0
goto IF_END2
label IF_FALSE2
push constant 2
pop local 0
label IF_END2
goto IF_END1
label IF_FALSE1
push local 2
push constant 1
eq
push local 2
push constant 2
eq
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 255
pop this 0
push constant 115
pop this 1
push local 2
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 3
pop local 0
goto IF_END4
label IF_FALSE4
push constant 4
pop local 0
label IF_END4
label IF_FALSE3
label IF_END1
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push this 0
push this 3
add
pop this 0
push this 1
push this 4
add
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push local 0
return
function Ball.collisionline 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 1
push this 2
sub
push constant 26
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 0
label IF_FALSE0
push this 1
push this 2
add
push constant 229
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
pop local 0
label IF_FALSE1
push local 0
return
function Ball.collisionvert 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
push this 2
sub
push constant 17
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 0
label IF_FALSE0
push this 0
push this 2
add
push constant 493
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
pop local 0
label IF_FALSE1
push local 0
return
function Ball.collisionrect 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 1
push argument 1
gt
push this 1
push argument 2
lt
and
push this 0
push this 2
sub
push constant 24
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 0
label IF_FALSE0
push this 1
push argument 3
gt
push this 1
push argument 4
lt
and
push this 0
push this 2
add
push constant 486
gt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
pop local 0
label IF_FALSE1
push local 0
return
function Ball.getcentery 0
push argument 0
pop pointer 0
push this 1
return
function Ball.getcenterx 0
push argument 0
pop pointer 0
push this 0
return
